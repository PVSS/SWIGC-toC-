//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.11
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class KVPAccessProvider : IKVPNode {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal KVPAccessProvider(global::System.IntPtr cPtr, bool cMemoryOwn) : base(IKVPPINVOKE.KVPAccessProvider_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(KVPAccessProvider obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~KVPAccessProvider() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IKVPPINVOKE.delete_KVPAccessProvider(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public KVPAccessProvider() : this(IKVPPINVOKE.new_KVPAccessProvider(), true) {
    SwigDirectorConnect();
  }

  public void Index(int data) {
    IKVPPINVOKE.KVPAccessProvider_Index(swigCPtr, data);
  }

  public override IKVPNode GetFirstChild() {
    global::System.IntPtr cPtr = (SwigDerivedClassHasMethod("GetFirstChild", swigMethodTypes0) ? IKVPPINVOKE.KVPAccessProvider_GetFirstChildSwigExplicitKVPAccessProvider(swigCPtr) : IKVPPINVOKE.KVPAccessProvider_GetFirstChild(swigCPtr));
    IKVPNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new IKVPNode(cPtr, false);
    return ret;
  }

  public override IKVPNode GetNextSibling() {
    global::System.IntPtr cPtr = (SwigDerivedClassHasMethod("GetNextSibling", swigMethodTypes1) ? IKVPPINVOKE.KVPAccessProvider_GetNextSiblingSwigExplicitKVPAccessProvider(swigCPtr) : IKVPPINVOKE.KVPAccessProvider_GetNextSibling(swigCPtr));
    IKVPNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new IKVPNode(cPtr, false);
    return ret;
  }

  public override int GetValue() {
    int ret = (SwigDerivedClassHasMethod("GetValue", swigMethodTypes2) ? IKVPPINVOKE.KVPAccessProvider_GetValueSwigExplicitKVPAccessProvider(swigCPtr) : IKVPPINVOKE.KVPAccessProvider_GetValue(swigCPtr));
    return ret;
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("GetFirstChild", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateKVPAccessProvider_0(SwigDirectorGetFirstChild);
    if (SwigDerivedClassHasMethod("GetNextSibling", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateKVPAccessProvider_1(SwigDirectorGetNextSibling);
    if (SwigDerivedClassHasMethod("GetValue", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateKVPAccessProvider_2(SwigDirectorGetValue);
    IKVPPINVOKE.KVPAccessProvider_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(KVPAccessProvider));
    return hasDerivedMethod;
  }

  private global::System.IntPtr SwigDirectorGetFirstChild() {
    return IKVPNode.getCPtr(GetFirstChild()).Handle;
  }

  private global::System.IntPtr SwigDirectorGetNextSibling() {
    return IKVPNode.getCPtr(GetNextSibling()).Handle;
  }

  private int SwigDirectorGetValue() {
    return GetValue();
  }

  public delegate global::System.IntPtr SwigDelegateKVPAccessProvider_0();
  public delegate global::System.IntPtr SwigDelegateKVPAccessProvider_1();
  public delegate int SwigDelegateKVPAccessProvider_2();

  private SwigDelegateKVPAccessProvider_0 swigDelegate0;
  private SwigDelegateKVPAccessProvider_1 swigDelegate1;
  private SwigDelegateKVPAccessProvider_2 swigDelegate2;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] {  };
}
