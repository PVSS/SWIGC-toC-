/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_IKVP_WRAP_H_
#define SWIG_IKVP_WRAP_H_

class SwigDirector_IKVPNode : public IKVPNode, public Swig::Director {

public:
    SwigDirector_IKVPNode();
    virtual IKVPNode *GetFirstChild() const;
    virtual IKVPNode *GetNextSibling() const;
    virtual IKVPValueType GetValue() const;

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackGetFirstChild, SWIG_Callback1_t callbackGetNextSibling, SWIG_Callback2_t callbackGetValue);

private:
    SWIG_Callback0_t swig_callbackGetFirstChild;
    SWIG_Callback1_t swig_callbackGetNextSibling;
    SWIG_Callback2_t swig_callbackGetValue;
    void swig_init_callbacks();
};

class SwigDirector_KVPNode : public KVPNode, public Swig::Director {

public:
    SwigDirector_KVPNode(IKVPNode *parent, IKVPValueType _val);
    SwigDirector_KVPNode(KVPNode const &other);
    SwigDirector_KVPNode(KVPNode &&other);
    virtual IKVPNode *GetFirstChild() const;
    virtual IKVPNode *GetNextSibling() const;
    virtual IKVPValueType GetValue() const;
    virtual IKVPNode *GetParent() const;

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback3_t)();
    void swig_connect_director(SWIG_Callback0_t callbackGetFirstChild, SWIG_Callback1_t callbackGetNextSibling, SWIG_Callback2_t callbackGetValue, SWIG_Callback3_t callbackGetParent);

private:
    SWIG_Callback0_t swig_callbackGetFirstChild;
    SWIG_Callback1_t swig_callbackGetNextSibling;
    SWIG_Callback2_t swig_callbackGetValue;
    SWIG_Callback3_t swig_callbackGetParent;
    void swig_init_callbacks();
};

class SwigDirector_KVPAccessProviderForScanProtocol : public KVPAccessProvider< ScanProtocol >, public Swig::Director {

public:
    SwigDirector_KVPAccessProviderForScanProtocol();
    virtual IKVPNode *GetFirstChild() const;
    virtual IKVPNode *GetNextSibling() const;
    virtual IKVPValueType GetValue() const;

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackGetFirstChild, SWIG_Callback1_t callbackGetNextSibling, SWIG_Callback2_t callbackGetValue);

private:
    SWIG_Callback0_t swig_callbackGetFirstChild;
    SWIG_Callback1_t swig_callbackGetNextSibling;
    SWIG_Callback2_t swig_callbackGetValue;
    void swig_init_callbacks();
};

class SwigDirector_ScanProtocol : public ScanProtocol, public Swig::Director {

public:
    SwigDirector_ScanProtocol();
    virtual IKVPNode *GetFirstChild() const;
    virtual IKVPNode *GetNextSibling() const;
    virtual IKVPValueType GetValue() const;

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback2_t)();
    void swig_connect_director(SWIG_Callback0_t callbackGetFirstChild, SWIG_Callback1_t callbackGetNextSibling, SWIG_Callback2_t callbackGetValue);

private:
    SWIG_Callback0_t swig_callbackGetFirstChild;
    SWIG_Callback1_t swig_callbackGetNextSibling;
    SWIG_Callback2_t swig_callbackGetValue;
    void swig_init_callbacks();
};


#endif
